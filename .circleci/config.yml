version: 2.1
executors:
  app:
    docker:
      - image: circleci/ruby:2.6.5-node
        environment:
            RAILS_ENV: test
            PGHOST: 127.0.0.1
            PGUSER: postgres
      - image: circleci/postgres:9.5-alpine

commands:
  load_cache:
    description: Restore bundle and node
    steps:
      - restore_cache:
          name: Restoring Bundle Cache
          key: cache-bundle-{{ checksum "Gemfile.lock" }}
      - restore_cache:
          name: Restoring Node Module Cache
          key: cache-node_modules-{{ checksum "package-lock.json" }}
  dump_cache:
    description: Dump bundle and node
    steps:
      - save_cache:
          name: Save Bundle Cache
          key: cache-bundle-{{ checksum "Gemfile.lock" }}
          paths:
            - ./vendor/bundle
      - save_cache:
          name: Save Node Module Cache
          key: cache-node_modules-{{ checksum "package-lock.json" }}
          paths:
            - ./node_modules
  bundler_install:
    steps:
      - run:
          name: Bundler install
          command: |
            gem update --system
            gem install bundler -v 2.1.4
      - run: bundle install --jobs=3 --retry=3 --deployment --path=./vendor/bundle
  setup_test:
    steps:
      - run:
          name: npm のインストール
          command: npm install
      - store_test_results: # テスト サマリー (https://circleci.com/ja/docs/2.0/collect-test-data/) に表示するテスト結果をアップロードします
          path: test_results
  setup_db:
    steps:
      - run:
          name: DB の待機
          command: dockerize -wait tcp://localhost:5432 -timeout 1m

      - run:
          name: データベースのセットアップ
          command: bin/rails db:create db:schema:load --trace

  rspec:
    steps:
      - run:
          name: RSpec 実行
          command: |
            bundle exec rspec
  lint:
    steps:
      - run:
          name: Rubocop 実行
          command: |
            bundle exec rubocop
  jest:
    steps:
      - run:
          name: jest
          command: |
            npm run test

jobs:
  build_and_test: # ローカルで全部実行用
    executor: app
    steps:
      - checkout
      - load_cache
      - bundler_install
      - setup_test
      - dump_cache
      - rspec
      - lint
      - jest
  build:
    executor: app
    steps:
      - checkout
      - load_cache
      - bundler_install
      - setup_test
      - dump_cache
  test:
    executor: app
    steps:
      - checkout
      - load_cache
      - bundler_install
      - setup_db
      - rspec
  lint:
    executor: app
    steps:
      - checkout
      - load_cache
      - bundler_install
      - lint
      - jest

workflows:
  version: 2
  build_and_spec:
    jobs:
      - build
      - test:
          requires:
            - build
      - lint:
          requires:
            - build
