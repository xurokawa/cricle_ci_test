version: 2.1
jobs:
  build:
    docker:
      - image: circleci/ruby:2.6.5-node
        environment:
          BUNDLE_JOBS: 3
          BUNDLE_RETRY: 3
          BUNDLE_PATH: vendor/bundle
          PGHOST: 127.0.0.1
          PGUSER: postgres
          RAILS_ENV: test
      - image: circleci/postgres:9.5-alpine # データベース イメージ
        environment: # データベースの環境変数
          POSTGRES_USER: postgres
          POSTGRES_DB: ci_test_test
          POSTGRES_PASSWORD: "password"
    steps:
      - checkout
      - run:
          name: Bundler install
          command: |
            gem update --system
            gem install bundler -v 2.1.4
      - run: bundle -v
      - restore_cache:
          keys:
            - ci_test_2-{{ checksum "Gemfile.lock" }}

      - run: bundle install --jobs=3 --retry=3 --deployment --path=./vendor/bundle

      - save_cache:
          key: ci_test_2-{{ checksum "Gemfile.lock" }}
          paths:
            - .vendor/bundle

      - restore_cache:
          keys:
            - rails-demo-yarn-{{ checksum "yarn.lock" }}

      - run:
          name: Yarn のインストール
          command: yarn install --cache-folder ~/.cache/yarn

      - save_cache:
          key: rails-demo-yarn-{{ checksum "yarn.lock" }}
          paths:
            - ~/.cache/yarn

      - run:
          name: DB の待機
          command: dockerize -wait tcp://localhost:5432 -timeout 1m

      - run:
          name: データベースのセットアップ
          command: bin/rails db:create db:schema:load --trace

      - run:
          name: RSpec 実行
          command: |
            bundle exec rspec

      - run:
          name: Rubocop 実行
          command: |
            bundle exec rubocop

      - store_test_results: # テスト サマリー (https://circleci.com/ja/docs/2.0/collect-test-data/) に表示するテスト結果をアップロードします
          path: test_results
  test:
    docker:
      - image: circleci/ruby:2.6.5-node
        environment:
          BUNDLE_JOBS: 3
          BUNDLE_RETRY: 3
          BUNDLE_PATH: vendor/bundle
          PGHOST: 127.0.0.1
          PGUSER: postgres
          RAILS_ENV: test
    steps:
      - run: echo 'run test'
workflows:
  version: 2
  build_and_spec:
    jobs:
      - build
